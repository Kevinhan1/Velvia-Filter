# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i33a_qzs9FA-Fn5rRClkx87rgP7o26vR
"""

import streamlit as st
import cv2
import numpy as np
import tempfile
from PIL import Image

# Fungsi untuk menerapkan filter Velvia-like
def apply_velvia_filter(image):
    img = cv2.cvtColor(np.array(image), cv2.COLOR_RGB2BGR)
    hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV).astype(np.float32)
    hsv[..., 1] *= 1.4  # Tingkatkan saturasi
    hsv[..., 1][hsv[..., 1] > 255] = 255  # Clip ke 255
    velvia_img = cv2.cvtColor(hsv.astype(np.uint8), cv2.COLOR_HSV2RGB)
    return Image.fromarray(velvia_img)

# Fungsi untuk memproses video frame-by-frame
def process_video(video_file):
    tfile = tempfile.NamedTemporaryFile(delete=False)
    tfile.write(video_file.read())
    vidcap = cv2.VideoCapture(tfile.name)

    frames = []
    while True:
        success, frame = vidcap.read()
        if not success:
            break
        frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
        filtered_frame = apply_velvia_filter(Image.fromarray(frame))
        frames.append(filtered_frame)

    vidcap.release()
    return frames

# UI Streamlit
st.title("Image & Video Processing with Velvia Filter")

uploaded_file = st.file_uploader("Upload an image or video", type=["jpg", "png", "mp4", "avi"])

if uploaded_file is not None:
    file_type = uploaded_file.type

    if "image" in file_type:
        image = Image.open(uploaded_file)
        st.image(image, caption="Original Image", use_column_width=True)

        filtered_image = apply_velvia_filter(image)
        st.image(filtered_image, caption="Filtered Image", use_column_width=True)

    elif "video" in file_type:
        st.video(uploaded_file)
        st.write("Processing video...")

        frames = process_video(uploaded_file)
        st.image(frames[0], caption="Filtered Video Frame Preview", use_column_width=True)

with open("app.py", "w") as f:
    f.write(code)

from google.colab import files
files.download("app.py")